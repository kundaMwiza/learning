// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/02/FullAdder.hdl

/**
 * Computes the sum of three bits.
 */

CHIP FullAdder {
    IN a, b, c;  // 1-bit inputs
    OUT sum,     // Right bit of a + b + c
        carry;   // Left bit of a + b + c

    PARTS:
    // Put you code here:
    //       sum carry 
    // 0 0 0 0 0
    // 0 0 1 1 0
    // 0 1 0 1 0 
    // 0 1 1 0 1
    // 1 0 0 1 0
    // 1 0 1 0 1
    // 1 1 0 0 1
    // 1 1 1 1 1

    And3Way(a=a, b=b, c=c, out=aBC);

    // sum = Xor(a,b,c) + And(a,b,c)

    Xor(a=a, b=b, out=aXorB);
    Xor(a=aXorB, b=c, out=aXorBXorC);
    Or(a=aXorBXorC, b=aBC, out=sum);

    // carry = And(a,b,c) + ^abc + a^bc + ab^c 

    // negativies
    Not(in=a, out=barA);
    Not(in=b, out=barB);
    Not(in=c, out=barC);

    And3Way(a=barA, b=b, c=c, out=barABC);
    And3Way(a=a, b=barB, c=c, out=aBarBC);
    And3Way(a=a, b=b, c=barC, out=aBBarC);
    Or4Way(in[0]=aBC, in[1]=barABC, in[2]=aBarBC, in[3]=aBBarC, out=carry);

}