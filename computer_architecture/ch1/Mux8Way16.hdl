// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Mux8Way16.hdl

CHIP Mux8Way16 {
    IN a[16], b[16], c[16], d[16],
       e[16], f[16], g[16], h[16],
       sel[3];
    OUT out[16];

    PARTS:

    // Put your code here:
    // per bit we want, e.g. for the first output bit:
    // out[0] = a[0]&sel=000 or b[0]&sel=001 or c[0]&sel=010 or d[0]&sel=011
    
    // 0 
    Mux8Way(
        in[0]=a[0], in[1]=b[0], in[2]=c[0], in[3]=d[0]
        , in[4]=e[0], in[5]=f[0], in[6]=g[0], in[7]=h[0]
        , sel=sel, out=out[0]
    );

    // 1
    Mux8Way(
        in[0]=a[1], in[1]=b[1], in[2]=c[1], in[3]=d[1]
        , in[4]=e[1], in[5]=f[1], in[6]=g[1], in[7]=h[1]
        , sel=sel, out=out[1]
    );

    // 2
    Mux8Way(
        in[0]=a[2], in[1]=b[2], in[2]=c[2], in[3]=d[2]
        , in[4]=e[2], in[5]=f[2], in[6]=g[2], in[7]=h[2]
        , sel=sel, out=out[2]
    ); 

    // 3
    Mux8Way(
        in[0]=a[3], in[1]=b[3], in[2]=c[3], in[3]=d[3]
        , in[4]=e[3], in[5]=f[3], in[6]=g[3], in[7]=h[3]
        , sel=sel, out=out[3]
    ); 
    
    // 4
    Mux8Way(
        in[0]=a[4], in[1]=b[4], in[2]=c[4], in[3]=d[4]
        , in[4]=e[4], in[5]=f[4], in[6]=g[4], in[7]=h[4]
        , sel=sel, out=out[4]
    ); 

    // 5
    Mux8Way(
        in[0]=a[5], in[1]=b[5], in[2]=c[5], in[3]=d[5]
        , in[4]=e[5], in[5]=f[5], in[6]=g[5], in[7]=h[5]
        , sel=sel, out=out[5]
    ); 

    // 6
    Mux8Way(
        in[0]=a[6], in[1]=b[6], in[2]=c[6], in[3]=d[6]
        , in[4]=e[6], in[5]=f[6], in[6]=g[6], in[7]=h[6]
        , sel=sel, out=out[6]
    ); 

    // 7
    Mux8Way(
        in[0]=a[7], in[1]=b[7], in[2]=c[7], in[3]=d[7]
        , in[4]=e[7], in[5]=f[7], in[6]=g[7], in[7]=h[7]
        , sel=sel, out=out[7]
    ); 

    // 8
    Mux8Way(
        in[0]=a[8], in[1]=b[8], in[2]=c[8], in[3]=d[8]
        , in[4]=e[8], in[5]=f[8], in[6]=g[8], in[7]=h[8]
        , sel=sel, out=out[8]
    ); 
    
    // 9
    Mux8Way(
        in[0]=a[9], in[1]=b[9], in[2]=c[9], in[3]=d[9]
        , in[4]=e[9], in[5]=f[9], in[6]=g[9], in[7]=h[9]
        , sel=sel, out=out[9]
    ); 

    // 10
    Mux8Way(
        in[0]=a[10], in[1]=b[10], in[2]=c[10], in[3]=d[10]
        , in[4]=e[10], in[5]=f[10], in[6]=g[10], in[7]=h[10]
        , sel=sel, out=out[10]
    ); 

    
    // 11
    Mux8Way(
        in[0]=a[11], in[1]=b[11], in[2]=c[11], in[3]=d[11]
        , in[4]=e[11], in[5]=f[11], in[6]=g[11], in[7]=h[11]
        , sel=sel, out=out[11]
    ); 
    
    // 12
    Mux8Way(
        in[0]=a[12], in[1]=b[12], in[2]=c[12], in[3]=d[12]
        , in[4]=e[12], in[5]=f[12], in[6]=g[12], in[7]=h[12]
        , sel=sel, out=out[12]
    ); 

    // 13
    Mux8Way(
        in[0]=a[13], in[1]=b[13], in[2]=c[13], in[3]=d[13]
        , in[4]=e[13], in[5]=f[13], in[6]=g[13], in[7]=h[13]
        , sel=sel, out=out[13]
    ); 

    // 14
    Mux8Way(
        in[0]=a[14], in[1]=b[14], in[2]=c[14], in[3]=d[14]
        , in[4]=e[14], in[5]=f[14], in[6]=g[14], in[7]=h[14]
        , sel=sel, out=out[14]
    ); 

    // 15
    Mux8Way(
        in[0]=a[15], in[1]=b[15], in[2]=c[15], in[3]=d[15]
        , in[4]=e[15], in[5]=f[15], in[6]=g[15], in[7]=h[15]
        , sel=sel, out=out[15]
    ); 




}