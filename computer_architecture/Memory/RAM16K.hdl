// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    
    Not(in=address[12], out=add1Neg);
    Not(in=address[13], out=add2Neg);

    // the load bit, if 1, should only be passed to the memory bank that is selected
    // we should only write to the memory bank if it has been selected.

    And3Way(in[0]=add1Neg, in[1]=add2Neg, in[2]=load, out=loadAdd0);
    RAM4K(in=in, load=loadAdd0, address[0..11]=address[0..11], out=out0);

    And3Way(in[0]=address[12], in[1]=add2Neg, in[2]=load, out=loadAdd1);
    RAM4K(in=in, load=loadAdd1, address[0..11]=address[0..11], out=out1);

    And3Way(in[0]=add1Neg, in[1]=address[13], in[2]=load, out=loadAdd2);
    RAM4K(in=in, load=loadAdd2, address[0..11]=address[0..11], out=out2);
    
    And3Way(in[0]=address[12], in[1]=address[13], in[2]=load, out=loadAdd3);
    RAM4K(in=in, load=loadAdd3, address[0..11]=address[0..11], out=out3);

    Mux4Way16(a=out0, b=out1, c=out2, d=out3, sel=address[12..13], out=out);
    
    }